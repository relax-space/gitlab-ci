
variables:
  FOLDERNAME: ""  #for example: nomni/
  SERVICE_NAME: go-api #for example: product-api-pangpang-brand from   https://gitlab.p2shop.cn:8443/data/rtc-data/blob/qa/config.qa.yml
  GITLABWITCH: "p2shop" # p2shop srx srx-p2shop,for example: srx-p2shop:git on https://gitlab.srxcloud.com and images in https://ci.p2shop.com.cn
  GOBUILDER: pangpanglabs/golang:builder-beta
  WORKDIR: $FOLDERNAME$CI_PROJECT_NAME
  GOTEST_REGISTRY: golang:1.12-alpine

stages:
  - build
  - test
build:
  stage: build
  tags:
    - golang-build
  after_script:
    - GLOBIGNORE="vendor-${CI_COMMIT_REF_SLUG}"; rm -r *
  script:
    - >
      docker run --rm 
      -v $(pwd):/go/src/$WORKDIR
      -w /go/src/$WORKDIR
      -e CGO_ENABLED=0
      $GOBUILDER
      sh -c '
      go build && 
      govendor init && 
      govendor add +e &&
      chmod -Rf 777 vendor'
    - mkdir vendor-$CI_COMMIT_REF_SLUG
    - cp -r vendor/* vendor-$CI_COMMIT_REF_SLUG/
  artifacts:
    paths:
      - vendor-$CI_COMMIT_REF_SLUG/
    expire_in: 1h
  only:
    - merge_requests

test: 
  stage: test
  variables:
    DOCKER_TLS_CERTDIR: ""
    PRIVATE_REGISTRY: registry.elandsystems.cn:5000
    GO_REGISTRY: $PRIVATE_REGISTRY/$GOTEST_REGISTRY
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    P2SHOP_REGISTRY: registry.p2shop.com.cn
    GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_CONCURRENT_ID/$CI_PROJECT_PATH
    VENDOR_REGISTRY: $PRIVATE_REGISTRY/$CI_PROJECT_NAME-vendor
    DOCKER_AUTH_CONFIG: '{"auths": {"registry.elandsystems.cn:5000": {"auth": "******"},"registry.p2shop.com.cn": {"auth": "******"}}}'
  before_script:
    - mkdir -p ~/.docker
    - touch ~/.docker/config.json
    - echo $DOCKER_AUTH_CONFIG >> ~/.docker/config.json
    - echo '10.202.101.22 gitlab.p2shop.cn' >> /etc/hosts
    - echo $DOCKER_PORT_2375_TCP_ADDR 'rtc-kafka' >> /etc/hosts
  image:
    name: $PRIVATE_REGISTRY/compose:1.24.1
    entrypoint: [""]
  services:
    - name: $PRIVATE_REGISTRY/docker:19.03.1-dind
      command: ["--insecure-registry=registry.elandsystems.cn:5000","--registry-mirror=https://dockerhub.azk8s.cn" ]
      alias: docker
  tags:
    - golang-test
  after_script:
    - rm -f -r *
    - cd ..
    - rm -f -r $CI_COMMIT_REF_SLUG
  script:
   # current pwd:/builds/0/xiao.xinmiao/go-api-test1/
   - cd ..
   # 1.run rtc
   - mkdir -p $CI_COMMIT_REF_SLUG
   - docker create -it --name rtc $PRIVATE_REGISTRY/run-test-container-qa sh
   - docker cp rtc:/go/bin/run-test-container $(pwd)/$CI_COMMIT_REF_SLUG/
   - docker rm -f rtc
   - echo $DOCKER_PORT_2375_TCP_ADDR
   - >
     ./$CI_COMMIT_REF_SLUG/run-test-container run $SERVICE_NAME  
     --no-login  
     --host-ip=$DOCKER_PORT_2375_TCP_ADDR
     -c $GITLABWITCH 
     --registry-common $PRIVATE_REGISTRY
   # 2.make vendor file
   - vendor="vendor-${CI_COMMIT_REF_SLUG}"
   - rm -f -r $vendor
   - mkdir -p $vendor
   - mv $(pwd)/$CI_PROJECT_NAME/$vendor/* $(pwd)/$vendor/  # for fix vendor issue: cannot find package "github.com/labstack/echo/v4"
   - docker ps -a
   # 3. go build && test
   - >
     docker run --rm  --network=host 
     -v $(pwd)/$vendor:/go/src 
     -v $(pwd)/$CI_PROJECT_NAME:/go/src/$WORKDIR 
     -w /go/src/$WORKDIR
     -e APP_ENV=
     -e JWT_SECRET=1234
     -e CGO_ENABLED=0
     $GO_REGISTRY 
     sh -c '
     go build && 
     go test -p 1 -count 1 -v -coverpkg=./... -coverprofile coverage.out ./... &&
     go tool cover -func=coverage.out'
  coverage: '/\(statements\)\s+\d+.\d+%/'
  only:
    - merge_requests
